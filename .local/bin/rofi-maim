#!/usr/bin/env bash
# Simple rofi menu for the maim screenshot utility

# This is bound to PrintScreen by default. It lets you
# choose the kind of screenshot to take, including copying the image or even
# highlighting an area to copy. Sends a notification if successful
# Deps: maim, rofi, notify-send.py, xclip

dest_dir="$HOME/Screenshots"

options="Selection\nActive Window\nFull Screen\nSelection - Copy\nActive Window - Copy\nFull Screen - Copy"

choice=$( echo -e $options | rofi -theme maim -l 6 -dmenu -i -fuzzy -p "Screenshot" )

if [[ -z ${choice} ]]; then
  exit 1
fi

ICON="applets-screenshooter"

function notifySaved() {
  notify-send -i $ICON "Screenshot taken..." 'saving to '$dest_dir \
    --hint="string:image-path:"$screen_path
}

function notifyClipboard() {
  notify-send -i $ICON "Screenshot taken..." 'copied to clipboard' \
    --hint="string:image-path:camera-photo"
}

case $choice in
  "Selection")
        screen_path=$dest_dir/pic-selected-"$(date '+%y%m%d-%H%M-%S').png"
        sleep 1 && maim -u -s $screen_path;
        notifySaved
        ;;
	"Active Window") 
        screen_path=$dest_dir/pic-window-"$(date '+%y%m%d-%H%M-%S').png"
        sleep 1 &&  maim -u -i $(xdotool getactivewindow) $screen_path;
        notifySaved
        ;;
	"Full Screen") 
        screen_path=$dest_dir/pic-full-"$(date '+%y%m%d-%H%M-%S').png"
        sleep 1 && maim -u $screen_path;
        notifySaved
        ;;
	"Selection - Copy")
        sleep 1 && maim -u -s | xclip -selection clipboard -t image/png;
        notifyClipboard
        ;;
	"Active Window - Copy")
        sleep 1 && maim -u -i "$(xdotool getactivewindow)" | xclip -selection clipboard -t image/png;
        notifyClipboard
        ;;
	"Full Screen - Copy")
        sleep 1 && maim -u | xclip -selection clipboard -t image/png;
        notifyClipboard
        ;;
esac
